TODO:

* valgrind 
* clean -> clean trie and linked list 
* duplicate words in dictionary??
* #ifndef & cmd gcc syntax to define. e.g. DEBUG
* userspace (main)
* key sequence to word 
  ch_i = [2, 9]
  word = children[ch0 - '0' - 2] + children[ch1 - '0' - 2] + ...
* clint style 
* # feature 
* malloc & all libarary call returning NULL (have a check for each call)
* check logic 
- extra credit 

SUBMISSION:
- tar 

USEFUL: 
  - gdb multi window -> gdb -tui ./a.out

Q1: Node * orig -> n1 
    Node * copy ---^

    free(orig) vs. free(copy)

    Ans: they do the same thing

Q2: front -> n1 -> n2 -> n3

    free: 1,2,3 vs free: 3,2,1
    preorder    vs postorder

    Ans: free from the back. In case of Trie, should use postorder 

Q3: cursor moving in userspace. Multiple sequence, remembering old ptr 
    Ans: return a linked list when key seq is entered

Q4: how should special chars handled? 0 & 1 key
    Ans: 10-children implementation is good to handle these cases, but 
    dictionary does not contain any of these. So it's 8-children 
    implementation is fine.
